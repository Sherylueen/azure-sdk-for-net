// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using Azure.ResourceManager;
using Azure.ResourceManager.AppComplianceAutomation;
using Azure.ResourceManager.AppComplianceAutomation.Models;
using ContentType = Azure.ResourceManager.AppComplianceAutomation.Models.ContentType;

namespace Azure.ResourceManager.AppComplianceAutomation.Samples
{
    public partial class Sample_WebhookResourceCollection
    {
        // Webhooks_List
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task GetAll_WebhooksList()
        {
            // Generated from example definition: specification/appcomplianceautomation/resource-manager/Microsoft.AppComplianceAutomation/preview/2023-02-15-preview/examples/Webhooks_List.json
            // this example is just showing the usage of "Webhooks_List" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReportResource created on azure
            // for more information of creating ReportResource, please refer to the document of ReportResource
            string reportName = "testReportName";
            ResourceIdentifier reportResourceId = ReportResource.CreateResourceIdentifier(reportName);
            ReportResource reportResource = client.GetReportResource(reportResourceId);

            // get the collection of this WebhookResource
            WebhookResourceCollection collection = reportResource.GetWebhookResources();

            // invoke the operation and iterate over the result
            string skipToken = "1";
            int? top = 100;
            await foreach (WebhookResource item in collection.GetAllAsync(skipToken: skipToken, top: top))
            {
                // the variable item is a resource, you could call other operations on this instance as well
                // but just for demo, we get its data from this resource instance
                WebhookResourceData resourceData = item.Data;
                // for demo we just print out the id
                Console.WriteLine($"Succeeded on id: {resourceData.Id}");
            }

            Console.WriteLine($"Succeeded");
        }

        // Webhook_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Get_WebhookGet()
        {
            // Generated from example definition: specification/appcomplianceautomation/resource-manager/Microsoft.AppComplianceAutomation/preview/2023-02-15-preview/examples/Webhook_Get.json
            // this example is just showing the usage of "Webhooks_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReportResource created on azure
            // for more information of creating ReportResource, please refer to the document of ReportResource
            string reportName = "testReportName";
            ResourceIdentifier reportResourceId = ReportResource.CreateResourceIdentifier(reportName);
            ReportResource reportResource = client.GetReportResource(reportResourceId);

            // get the collection of this WebhookResource
            WebhookResourceCollection collection = reportResource.GetWebhookResources();

            // invoke the operation
            string webhookName = "testWebhookName";
            WebhookResource result = await collection.GetAsync(webhookName);

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WebhookResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }

        // Webhook_Get
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task Exists_WebhookGet()
        {
            // Generated from example definition: specification/appcomplianceautomation/resource-manager/Microsoft.AppComplianceAutomation/preview/2023-02-15-preview/examples/Webhook_Get.json
            // this example is just showing the usage of "Webhooks_Get" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReportResource created on azure
            // for more information of creating ReportResource, please refer to the document of ReportResource
            string reportName = "testReportName";
            ResourceIdentifier reportResourceId = ReportResource.CreateResourceIdentifier(reportName);
            ReportResource reportResource = client.GetReportResource(reportResourceId);

            // get the collection of this WebhookResource
            WebhookResourceCollection collection = reportResource.GetWebhookResources();

            // invoke the operation
            string webhookName = "testWebhookName";
            bool result = await collection.ExistsAsync(webhookName);

            Console.WriteLine($"Succeeded: {result}");
        }

        // Webhook_CreateOrUpdate
        [NUnit.Framework.Test]
        [NUnit.Framework.Ignore("Only verifying that the sample builds")]
        public async Task CreateOrUpdate_WebhookCreateOrUpdate()
        {
            // Generated from example definition: specification/appcomplianceautomation/resource-manager/Microsoft.AppComplianceAutomation/preview/2023-02-15-preview/examples/Webhook_CreateOrUpdate.json
            // this example is just showing the usage of "Webhooks_CreateOrUpdate" operation, for the dependent resources, they will have to be created separately.

            // get your azure access token, for more details of how Azure SDK get your access token, please refer to https://learn.microsoft.com/en-us/dotnet/azure/sdk/authentication?tabs=command-line
            TokenCredential cred = new DefaultAzureCredential();
            // authenticate your client
            ArmClient client = new ArmClient(cred);

            // this example assumes you already have this ReportResource created on azure
            // for more information of creating ReportResource, please refer to the document of ReportResource
            string reportName = "testReportName";
            ResourceIdentifier reportResourceId = ReportResource.CreateResourceIdentifier(reportName);
            ReportResource reportResource = client.GetReportResource(reportResourceId);

            // get the collection of this WebhookResource
            WebhookResourceCollection collection = reportResource.GetWebhookResources();

            // invoke the operation
            string webhookName = "testWebhookName";
            WebhookResourceData data = new WebhookResourceData(new WebhookProperties()
            {
                Status = WebhookStatus.Enabled,
                SendAllEvents = SendAllEvent.False,
                Events =
{
NotificationEvent.GenerateSnapshotFailed
},
                PayloadUri = new Uri("https://example.com"),
                ContentType = ContentType.ApplicationJson,
                WebhookKey = "00000000-0000-0000-0000-000000000000",
                UpdateWebhookKey = UpdateWebhookKey.True,
                EnableSslVerification = EnableSslVerification.True,
            });
            ArmOperation<WebhookResource> lro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, webhookName, data);
            WebhookResource result = lro.Value;

            // the variable result is a resource, you could call other operations on this instance as well
            // but just for demo, we get its data from this resource instance
            WebhookResourceData resourceData = result.Data;
            // for demo we just print out the id
            Console.WriteLine($"Succeeded on id: {resourceData.Id}");
        }
    }
}
