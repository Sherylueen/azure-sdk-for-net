// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    public partial class ControlFamily
    {
        internal static ControlFamily DeserializeControlFamily(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> controlFamilyName = default;
            Optional<ControlFamilyStatus> controlFamilyStatus = default;
            Optional<IReadOnlyList<Control>> controls = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("controlFamilyName"u8))
                {
                    controlFamilyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("controlFamilyStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    controlFamilyStatus = new ControlFamilyStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("controls"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Control> array = new List<Control>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Control.DeserializeControl(item));
                    }
                    controls = array;
                    continue;
                }
            }
            return new ControlFamily(controlFamilyName.Value, Optional.ToNullable(controlFamilyStatus), Optional.ToList(controls));
        }
    }
}
