// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    public partial class Responsibility
    {
        internal static Responsibility DeserializeResponsibility(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> responsibilityId = default;
            Optional<string> responsibilityTitle = default;
            Optional<string> responsibilityDescription = default;
            Optional<ResponsibilityType> responsibilityType = default;
            Optional<ResponsibilitySeverity> responsibilitySeverity = default;
            Optional<ResponsibilityStatus> responsibilityStatus = default;
            Optional<ResponsibilityEnvironment> responsibilityEnvironment = default;
            Optional<int> failedResourceCount = default;
            Optional<int> totalResourceCount = default;
            Optional<IReadOnlyList<ResponsibilityResource>> resourceList = default;
            Optional<IReadOnlyList<Recommendation>> recommendationList = default;
            Optional<string> guidance = default;
            Optional<string> justification = default;
            Optional<IReadOnlyList<string>> evidenceFiles = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("responsibilityId"u8))
                {
                    responsibilityId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("responsibilityTitle"u8))
                {
                    responsibilityTitle = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("responsibilityDescription"u8))
                {
                    responsibilityDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("responsibilityType"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    responsibilityType = new ResponsibilityType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("responsibilitySeverity"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    responsibilitySeverity = new ResponsibilitySeverity(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("responsibilityStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    responsibilityStatus = new ResponsibilityStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("responsibilityEnvironment"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    responsibilityEnvironment = new ResponsibilityEnvironment(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("failedResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    failedResourceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("totalResourceCount"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    totalResourceCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("resourceList"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<ResponsibilityResource> array = new List<ResponsibilityResource>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResponsibilityResource.DeserializeResponsibilityResource(item));
                    }
                    resourceList = array;
                    continue;
                }
                if (property.NameEquals("recommendationList"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<Recommendation> array = new List<Recommendation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(Recommendation.DeserializeRecommendation(item));
                    }
                    recommendationList = array;
                    continue;
                }
                if (property.NameEquals("guidance"u8))
                {
                    guidance = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("justification"u8))
                {
                    justification = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("evidenceFiles"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    evidenceFiles = array;
                    continue;
                }
            }
            return new Responsibility(responsibilityId.Value, responsibilityTitle.Value, responsibilityDescription.Value, Optional.ToNullable(responsibilityType), Optional.ToNullable(responsibilitySeverity), Optional.ToNullable(responsibilityStatus), Optional.ToNullable(responsibilityEnvironment), Optional.ToNullable(failedResourceCount), Optional.ToNullable(totalResourceCount), Optional.ToList(resourceList), Optional.ToList(recommendationList), guidance.Value, justification.Value, Optional.ToList(evidenceFiles));
        }
    }
}
