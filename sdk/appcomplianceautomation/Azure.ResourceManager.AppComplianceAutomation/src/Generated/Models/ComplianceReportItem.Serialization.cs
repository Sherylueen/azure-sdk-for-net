// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    public partial class ComplianceReportItem
    {
        internal static ComplianceReportItem DeserializeComplianceReportItem(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> categoryName = default;
            Optional<string> controlFamilyName = default;
            Optional<string> controlId = default;
            Optional<string> controlName = default;
            Optional<ControlStatus> controlStatus = default;
            Optional<string> responsibilityTitle = default;
            Optional<string> responsibilityDescription = default;
            Optional<string> resourceId = default;
            Optional<string> resourceType = default;
            Optional<ResourceOrigin> resourceOrigin = default;
            Optional<ResourceStatus> resourceStatus = default;
            Optional<DateTimeOffset> resourceStatusChangeDate = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("categoryName"u8))
                {
                    categoryName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("controlFamilyName"u8))
                {
                    controlFamilyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("controlId"u8))
                {
                    controlId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("controlName"u8))
                {
                    controlName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("controlStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    controlStatus = new ControlStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("responsibilityTitle"u8))
                {
                    responsibilityTitle = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("responsibilityDescription"u8))
                {
                    responsibilityDescription = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceId"u8))
                {
                    resourceId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceType"u8))
                {
                    resourceType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("resourceOrigin"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceOrigin = new ResourceOrigin(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceStatus"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceStatus = new ResourceStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("resourceStatusChangeDate"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    resourceStatusChangeDate = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new ComplianceReportItem(categoryName.Value, controlFamilyName.Value, controlId.Value, controlName.Value, Optional.ToNullable(controlStatus), responsibilityTitle.Value, responsibilityDescription.Value, resourceId.Value, resourceType.Value, Optional.ToNullable(resourceOrigin), Optional.ToNullable(resourceStatus), Optional.ToNullable(resourceStatusChangeDate));
        }
    }
}
