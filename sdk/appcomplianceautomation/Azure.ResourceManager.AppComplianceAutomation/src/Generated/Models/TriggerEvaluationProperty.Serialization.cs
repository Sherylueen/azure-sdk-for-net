// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.AppComplianceAutomation.Models
{
    public partial class TriggerEvaluationProperty
    {
        internal static TriggerEvaluationProperty DeserializeTriggerEvaluationProperty(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<DateTimeOffset> triggerTime = default;
            Optional<DateTimeOffset> evaluationEndTime = default;
            Optional<IReadOnlyList<string>> resourceIds = default;
            Optional<IReadOnlyList<QuickAssessment>> quickAssessments = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("triggerTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    triggerTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("evaluationEndTime"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    evaluationEndTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("resourceIds"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    resourceIds = array;
                    continue;
                }
                if (property.NameEquals("quickAssessments"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<QuickAssessment> array = new List<QuickAssessment>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(QuickAssessment.DeserializeQuickAssessment(item));
                    }
                    quickAssessments = array;
                    continue;
                }
            }
            return new TriggerEvaluationProperty(Optional.ToNullable(triggerTime), Optional.ToNullable(evaluationEndTime), Optional.ToList(resourceIds), Optional.ToList(quickAssessments));
        }
    }
}
